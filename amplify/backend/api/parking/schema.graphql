type Query {
  listSlots: [Slot] @function(name: "listSlots-${env}")
  listInvoices: [Invoice] @function(name: "listInvoices-${env}")
}

type Mutation {
  updateSlotStatus(input: UpdateSlotStatusInput!): Slot @function(name: "updateSlotStatus-${env}")
  startParking(input: StartParkingInput!): Invoice @function(name: "startParking-${env}")
  finishParking(input: FinishParkingInput!): Invoice @function(name: "finishParking-${env}")
}

type Subscription {
	onUpdateSlotStatus: Slot @aws_subscribe(mutations: ["updateSlotStatus"])
  onStartParking: Invoice @aws_subscribe(mutations: ["startParking"])
  onFinishParking: Invoice @aws_subscribe(mutations: ["finishParking"])
}

type Slot {
  Id: ID!
  Device: Int
  SlotNumber: String
  SlotStatus: Int
}

type Invoice {
  Id: ID!
  UserID: String
  SlotID: String
  PlateNumber: String
  DateFrom: String
  DateTo: String
  Price: Float
}

input UpdateSlotStatusInput {
  Device: Int!
  SlotStatus: Int!
}

input StartParkingInput {
  UserID: String!
  PlateNumber: String!
  SlotNumber: String!
}

input FinishParkingInput {
  UserID: String!
  InvoiceID: String!
}